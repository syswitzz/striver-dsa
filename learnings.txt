#include<bits/stdc++.h>

USING NAMESPACE STD;
// removes the need to use "std::cout"

DATATYPES
// int, long, long long, float, double
// string, getline
// char 

MEMORY
// int = -10^9 to 10^9
// long =  -10^12 to 10^12
// long long = -10^18 to 10^18

STAR PATTERN
// rows = outer loop
// column = inner loop

LIST, VECTOR
// vector: dynamic array (contiguous memory).
// list: doubly-linked list (non-contiguous).

TIME COMPLEXITY
// whenever theres division happening the time complexity will be in logarithmic
// whenever there is  x/2, n/2 etc then time complexity will be O(log(n))
// storing/fetching in (map) - log(N) in [all] cases 
// storing/fetching in (unordered_map) - O(1) in [ok] cases and O(N) in [worst] cases | where (N) is number of elements
// top - O(1)
// pop, push, insert, erase - log(n)

EUCLIDEAN ALGORITHM
// GCD of (n1, n2) = GCD of (n1-n2, n2) where n1>n2

ARRAY LIMITS  (learned in hashing video)
// 1e6 for integer inside int main
// 1e7 for integer in global
// 1e7 for boolean inside int main
// 1e8 for boolean in global
// accesssing an array by address is not possible because we can not predict the address of first arr[0]. but address of arr[1] is add. of arr[0]+1.

RUNTIME ERROR
// when youre trying to access and element which is not present

INTERVIEW TIPS
// brute -> better -> optimal
// do not start with the best solution even if you know, start with normal and then keep optimizing
